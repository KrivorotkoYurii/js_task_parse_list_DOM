{"mappings":"AAAA;AAEA,MAAM,YAAY;OAAI,SAAS,gBAAgB,CAAC;CAAM;AAEtD,MAAM,sBAAsB,CAAC;IAC3B,OAAO,OAAO,OAAO,CAAC,OAAO;AAC/B;AAEA,MAAM,WAAW,CAAC;IAChB,KACG,IAAI,CACH,CAAC,QAAQ,SACP,oBAAoB,OAAO,OAAO,CAAC,MAAM,IACzC,oBAAoB,OAAO,OAAO,CAAC,MAAM,GAE5C,OAAO,CAAC,CAAC,UAAU,IAAM,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC;AAChE;AAEA,MAAM,eAAe,CAAC;IACpB,KAAK,OAAO,CAAC,CAAC;QACZ,OAAO;YACL,MAAM,SAAS,SAAS;YACxB,UAAU,SAAS,OAAO,CAAC,QAAQ;YACnC,QAAQ,oBAAoB,SAAS,OAAO,CAAC,MAAM;YACnD,KAAK,CAAC,SAAS,OAAO,CAAC,GAAG;QAC5B;IACF;AACF;AAEA,SAAS;AACT,aAAa","sources":["src/scripts/main.js"],"sourcesContent":["'use strict';\n\nconst employees = [...document.querySelectorAll('li')];\n\nconst dataAtributToNumber = (salary) => {\n  return salary.replace(/\\D/g, '');\n};\n\nconst sortList = (list) => {\n  list\n    .sort(\n      (value1, value2) =>\n        dataAtributToNumber(value2.dataset.salary) -\n        dataAtributToNumber(value1.dataset.salary),\n    )\n    .forEach((employee, i) => list[i].parentElement.appendChild(employee));\n};\n\nconst getEmployees = (list) => {\n  list.forEach((employee) => {\n    return {\n      name: employee.innerText,\n      position: employee.dataset.position,\n      salary: dataAtributToNumber(employee.dataset.salary),\n      age: +employee.dataset.age,\n    };\n  });\n};\n\nsortList(employees);\ngetEmployees(employees);\n"],"names":[],"version":3,"file":"index.f75de5e1.js.map","sourceRoot":"/__parcel_source_root/"}