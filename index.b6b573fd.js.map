{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,I,EAAM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAgB,SAAS,gBAAgB,CAAC,Q,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAE1C,EAAsB,SAAC,CAA7B,EACE,OAAO,EAAO,OAAO,CAAC,MAAO,GAC/B,GAuBA,AArBiB,SAAC,CAAlB,EACE,EACG,IAAI,CACH,SAAC,CAAA,CAAQ,CAFb,EAGM,OAAA,EAAoB,EAAO,OAAO,CAAC,MAAM,EACzC,EAAoB,EAAO,OAAO,CAAC,MAAM,CAE5C,GAAA,OAAO,CAAC,SAAC,CAAA,CAAU,CAAnB,EAAyB,OAAA,CAAI,CAAC,EAAE,CAAC,aAAa,CAAC,WAAW,CAAC,E,EAChE,EAaS,GACT,AAZqB,SAAC,CAAtB,EACE,EAAK,OAAO,CAAC,SAAC,CAAd,EACE,MAAO,CACL,KAAM,EAAS,SAAS,CACxB,SAAU,EAAS,OAAO,CAAC,QAAQ,CACnC,OAAQ,EAAoB,EAAS,OAAO,CAAC,MAAM,EACnD,IAAK,CAAC,EAAS,OAAO,CAAC,GAAG,AAC5B,CACF,EACF,EAGa","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar employees = _to_consumable_array(document.querySelectorAll(\"li\"));\nvar dataAtributToNumber = function(salary) {\n    return salary.replace(/\\D/g, \"\");\n};\nvar sortList = function(list) {\n    list.sort(function(value1, value2) {\n        return dataAtributToNumber(value2.dataset.salary) - dataAtributToNumber(value1.dataset.salary);\n    }).forEach(function(employee, i) {\n        return list[i].parentElement.appendChild(employee);\n    });\n};\nvar getEmployees = function(list) {\n    list.forEach(function(employee) {\n        return {\n            name: employee.innerText,\n            position: employee.dataset.position,\n            salary: dataAtributToNumber(employee.dataset.salary),\n            age: +employee.dataset.age\n        };\n    });\n};\nsortList(employees);\ngetEmployees(employees);\n\n//# sourceMappingURL=index.b6b573fd.js.map\n","'use strict';\n\nconst employees = [...document.querySelectorAll('li')];\n\nconst dataAtributToNumber = (salary) => {\n  return salary.replace(/\\D/g, '');\n};\n\nconst sortList = (list) => {\n  list\n    .sort(\n      (value1, value2) =>\n        dataAtributToNumber(value2.dataset.salary) -\n        dataAtributToNumber(value1.dataset.salary),\n    )\n    .forEach((employee, i) => list[i].parentElement.appendChild(employee));\n};\n\nconst getEmployees = (list) => {\n  list.forEach((employee) => {\n    return {\n      name: employee.innerText,\n      position: employee.dataset.position,\n      salary: dataAtributToNumber(employee.dataset.salary),\n      age: +employee.dataset.age,\n    };\n  });\n};\n\nsortList(employees);\ngetEmployees(employees);\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","employees","_array_without_holes","isArray","document","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","dataAtributToNumber","salary","replace","sortList","list","sort","value1","value2","dataset","forEach","employee","parentElement","appendChild","getEmployees","innerText","position","age"],"version":3,"file":"index.b6b573fd.js.map"}